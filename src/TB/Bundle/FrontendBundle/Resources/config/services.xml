<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        
        <!-- Register Twig extension as service -->
        <service id="tb.twig.tb_extension" class="TB\Bundle\FrontendBundle\Twig\TBExtension">
            <tag name="twig.extension" />
        </service>
        
        <!-- Register custom user signup form as service -->
        <service id="tb_user.registration.form.type" class="TB\Bundle\FrontendBundle\Form\Type\RegistrationFormType">
            <tag name="form.type" alias="tb_user_registration" />
            <argument>%fos_user.model.user.class%</argument>
        </service>
        
        <!-- Register custom user profile form as service -->
        <service id="tb_user.profile.form.type" class="TB\Bundle\FrontendBundle\Form\Type\ProfileFormType">
            <tag name="form.type" alias="tb_user_profile" />
            <argument>%fos_user.model.user.class%</argument>
        </service>
        
        <!-- Register media importer service -->
        <service id="tb.media.importer" class="TB\Bundle\FrontendBundle\Util\MediaImporter">
            <argument type="service" id="doctrine.orm.entity_manager" />
        </service>
        
        <!-- Register events finder service -->
        <service id="tb.events.finder" class="TB\Bundle\FrontendBundle\Util\EventsFinder">
            <argument type="service" id="doctrine.orm.entity_manager" />
        </service>
        
        <!-- Register event listener to redirect to the homepage after resetting password -->
        <service id="change_password_complete" class="TB\Bundle\FrontendBundle\EventListener\ResettingResetSuccessListener">
            <argument type="service" id="router" />
            <tag name="kernel.event_subscriber" />
        </service>
        
        <!-- Register event listener to redirect to the user profile page after editing the profile -->
        <service id="change_password_complete" class="TB\Bundle\FrontendBundle\EventListener\ProfileEditSuccessListener">
            <argument type="service" id="router" />
            <tag name="kernel.event_subscriber" />
        </service>
        
        <!-- Register event listener to post the email to mailproxy after registration -->
        <service id="registration_completed" class="TB\Bundle\FrontendBundle\EventListener\RegistrationCompletedListener">
            <argument type="service" id="service_container" />
            <tag name="kernel.event_listener" event="fos_user.registration.completed" method="onRegistrationCompleted" />  
        </service>
        
        <!-- Register Event Listener to update the user gravatar avatar on every login --> 
        <service id="tb.security.login_listener" class="TB\Bundle\FrontendBundle\EventListener\AuthenticationSuccessListener">  
            <argument type="service" id="service_container" />  
            <argument type="service" id="doctrine.orm.entity_manager" />  
            <tag name="kernel.event_listener" event="security.authentication.success" method="onAuthenticationSuccess" />  
        </service> 
        
        <!-- Register Event Subscriber to listen on Entity update and persist events -->
        <service id="tb.entity_event_subscriber" class="TB\Bundle\FrontendBundle\EventListener\EntityEventSubscriber">
            <argument type="service" id="service_container" />
            <tag name="doctrine.event_subscriber" connection="default" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a Route gets published -->
        <service id="tb.activity.route_publish_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.route_publish" method="onRoutePublish" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a User gets followed -->
        <service id="tb.activity.user_follow_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.user_follow" method="onUserFollow" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a User gets unfollowed -->
        <service id="tb.activity.user_unfollow_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.user_unfollow" method="onUserUnfollow" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a Route gets liked -->
        <service id="tb.activity.route_like_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.route_like" method="onRouteLike" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a Route like gets undone -->
        <service id="tb.activity.route_undolike_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.route_undolike" method="onRouteUndoLike" />
        </service>
        
        <!-- Register event listener to create an Activity Feed Item when a user registers -->
        <service id="tb.activity.user_register" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="fos_user.registration.completed" method="onUserRegister" />  
        </service>

        <!--  Register activity feed generator and as service -->
        <service id="tb.activity.feed.generator" class="TB\Bundle\FrontendBundle\Util\ActivityFeedGenerator">
            <argument type="service" id="doctrine.orm.entity_manager" />
        </service>
                
        <service id="old_sound_rabbit_mq.main_consumer" class="TB\Bundle\FrontendBundle\Util\MainConsumer">
            <argument type="service" id="old_sound_rabbit_mq.connection.default" />
            <argument type="service" id="service_container" />
        </service>

        <service id="tb.mailproxy" class="TB\Bundle\FrontendBundle\Util\Mailproxy">
            <argument type="service" id="service_container" />
            <argument type="service" id="http_client" />
        </service>
        
        <!-- Register Event Listener to create a facebook shareimage when a Route gets published -->
        <service id="tb.route.publish_listener" class="TB\Bundle\FrontendBundle\EventListener\RoutePublishListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <tag name="kernel.event_listener" event="tb.route_publish" method="onRoutePublish" />
        </service>

        <!--  Register image generator as service -->
        <service id="tb.image.generator" class="TB\Bundle\FrontendBundle\Util\ImageGenerator">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="trail_media_files_filesystem" />
        </service>
        
    </services>
</container>
