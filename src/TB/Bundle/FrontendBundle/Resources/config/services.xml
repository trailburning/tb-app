<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        
        <!-- Register Twig extension as service -->
        <service id="tb.twig.tb_extension" class="TB\Bundle\FrontendBundle\Twig\TBExtension">
            <tag name="twig.extension" />
        </service>
        
        <!-- Register custom user signup form as service -->
        <service id="tb_user.registration.form.type" class="TB\Bundle\FrontendBundle\Form\Type\RegistrationFormType">
            <tag name="form.type" alias="tb_user_registration" />
            <argument>%fos_user.model.user.class%</argument>
        </service>
        
        <!-- Register custom user profile form as service -->
        <service id="tb_user.profile.form.type" class="TB\Bundle\FrontendBundle\Form\Type\ProfileFormType">
            <tag name="form.type" alias="tb_user_profile" />
            <argument>%fos_user.model.user.class%</argument>
        </service>
        
        <!-- Register media importer service -->
        <service id="tb.media.importer" class="TB\Bundle\FrontendBundle\Service\MediaImporter">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="tb.timezone" />
        </service>
        
        <!-- Register Timezone service -->
        <service id="tb.timezone" class="TB\Bundle\FrontendBundle\Service\Timezone">
            <argument type="service" id="http_client" />
        </service>
        
        <!-- Register events finder service -->
        <service id="tb.events.finder" class="TB\Bundle\FrontendBundle\Service\EventsFinder">
            <argument type="service" id="doctrine.orm.entity_manager" />
        </service>
        
        <!-- Register event listener to redirect to the homepage after resetting password -->
        <service id="change_password_complete" class="TB\Bundle\FrontendBundle\EventListener\ResettingResetSuccessListener">
            <argument type="service" id="router" />
            <tag name="kernel.event_subscriber" />
        </service>
        
        <!-- Register event listener to redirect to the user profile page after editing the profile -->
        <service id="profile_edit_complete" class="TB\Bundle\FrontendBundle\EventListener\ProfileEditSuccessListener">
            <argument type="service" id="service_container" />
            <argument type="service" id="router" />
            <tag name="kernel.event_subscriber" />
        </service>
        
        <!-- Register event listener to post the email to mailproxy after registration -->
        <service id="registration_completed" class="TB\Bundle\FrontendBundle\EventListener\RegistrationCompletedListener">
            <argument type="service" id="service_container" />
            <tag name="kernel.event_listener" event="fos_user.registration.completed" method="onRegistrationCompleted" />  
        </service>
        
        <!-- Register event listener addadditional information to the user object from external authentification providers (e.g. Facebook) -->
        <service id="registration_initialize" class="TB\Bundle\FrontendBundle\EventListener\RegistrationInitializeListener">
            <argument type="service" id="service_container" />
            <tag name="kernel.event_listener" event="fos_user.registration.initialize" method="onRegistrationInitialize" />  
        </service>
        
        <!-- Register Event Listener to update the user gravatar avatar on every login --> 
        <service id="tb.security.login_listener" class="TB\Bundle\FrontendBundle\EventListener\AuthenticationSuccessListener">  
            <argument type="service" id="service_container" />  
            <argument type="service" id="doctrine.orm.entity_manager" />  
            <argument type="service" id="tb.facebook.connector" />  
            <tag name="kernel.event_listener" event="security.authentication.success" method="onAuthenticationSuccess" />  
        </service> 
        
        <!-- Register Event Subscriber to listen on Entity update and persist events -->
        <service id="tb.entity_event_subscriber" class="TB\Bundle\FrontendBundle\EventListener\EntityEventSubscriber">
            <argument type="service" id="service_container" />
            <argument type="service" id="tb.mailproxy" />
            <tag name="doctrine.event_subscriber" connection="default" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a Route gets published -->
        <service id="tb.activity.route_publish_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.route_publish" method="onRoutePublish" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a Route gets accepted to a Campaign -->
        <service id="tb.activity.campaign_route_accept_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.campaign_route_accept" method="onCampaignRouteAccept" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a User gets followed -->
        <service id="tb.activity.user_follow_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.user_follow" method="onUserFollow" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a User gets unfollowed -->
        <service id="tb.activity.user_unfollow_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.user_unfollow" method="onUserUnfollow" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a Campaign gets followed -->
        <service id="tb.activity.campaign_follow_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.campaign_follow" method="onCampaignFollow" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a Campaign gets unfollowed -->
        <service id="tb.activity.campaign_unfollow_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.campaign_unfollow" method="onCampaignUnfollow" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a Route gets liked -->
        <service id="tb.activity.route_like_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.route_like" method="onRouteLike" />
        </service>
        
        <!-- Register Event Listener to create an Activity Feed Item when a Route like gets undone -->
        <service id="tb.activity.route_undolike_listener" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="tb.route_undolike" method="onRouteUndoLike" />
        </service>
        
        <!-- Register event listener to create an Activity Feed Item when a user registers -->
        <service id="tb.activity.user_register" class="TB\Bundle\FrontendBundle\EventListener\ActivityListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="tb.activity.feed.generator" />
            <tag name="kernel.event_listener" event="fos_user.registration.completed" method="onUserRegister" />  
        </service>

        <!--  Register activity feed generator and as service -->
        <service id="tb.activity.feed.generator" class="TB\Bundle\FrontendBundle\Service\ActivityFeedGenerator">
            <argument type="service" id="doctrine.orm.entity_manager" />
        </service>
                
        <service id="old_sound_rabbit_mq.main_consumer" class="TB\Bundle\FrontendBundle\Service\MainConsumer">
            <argument type="service" id="old_sound_rabbit_mq.connection.default" />
            <argument type="service" id="service_container" />
        </service>

        <service id="tb.mailproxy" class="TB\Bundle\FrontendBundle\Service\Mailproxy">
            <argument type="service" id="service_container" />
            <argument type="service" id="http_client" />
            <argument type="service" id="tb.mandrill" />
            <argument type="service" id="tb.mailchimp_lists" />
        </service>
        
        <!-- Register Event Listener to create a facebook shareimage when a Route gets published -->
        <service id="tb.route.publish_listener" class="TB\Bundle\FrontendBundle\EventListener\RoutePublishListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <argument type="service" id="service_container" />
            <tag name="kernel.event_listener" event="tb.route_publish" method="onRoutePublish" />
        </service>

        <!-- Register Event Listener to create a facebook shareimage when a Route gets updated -->
        <service id="tb.route.update_listener" class="TB\Bundle\FrontendBundle\EventListener\RouteUpdateListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <tag name="kernel.event_listener" event="tb.route_update" method="onRouteUpdate" />
        </service>

        <!--  Register image generator as service -->
        <service id="tb.image.generator" class="TB\Bundle\FrontendBundle\Service\ImageGenerator">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="trail_media_files_filesystem" />
            <argument type="service" id="asset_files_filesystem" />
        </service>
        
        <!--  Register image generator as service -->
        <service id="tb.elasticsearch.client" class="Elasticsearch\Client">
            <argument>%elasticsearch%</argument>
        </service>
        
        <!-- Register Event Listener to index the Route to elasticsearch when the Route gets published -->
        <service id="tb.search.route_publish_listener" class="TB\Bundle\FrontendBundle\EventListener\SearchListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <tag name="kernel.event_listener" event="tb.route_publish" method="onRoutePublish" />
        </service>
        
        <!-- Register Event Listener to index the Route to elasticsearch when the Route gets updated -->
        <service id="tb.search.route_publish_listener" class="TB\Bundle\FrontendBundle\EventListener\SearchListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <tag name="kernel.event_listener" event="tb.route_update" method="onRouteUpdate" />
        </service>

        <!-- Register event listener to post the email to mailproxy after registration -->
        <service id="tb.searcg.route_publish_listener" class="TB\Bundle\FrontendBundle\EventListener\SearchListener">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="old_sound_rabbit_mq.main_producer" />
            <tag name="kernel.event_listener" event="fos_user.registration.completed" method="onUserCreate" />  
        </service>

        <!-- Register Mandrill service -->
        <service id="tb.mandrill" class="Mandrill">
            <argument>%mandrill_api_key%</argument>
        </service>
        
        <service id="tb.provider.oauth" class="TB\Bundle\FrontendBundle\Security\OAuthUserProvider">
            <argument type="service" id="fos_user.user_manager" />
            <argument type="collection">
                <argument key="facebook">oAuthId</argument>
            </argument>
        </service>

        <service id="tb.user_manager" class="TB\Bundle\FrontendBundle\Security\OAuthUserManager">
            <argument type="service" id="security.encoder_factory" />
            <argument type="service" id="fos_user.util.username_canonicalizer" />
            <argument type="service" id="fos_user.util.email_canonicalizer" />
            <argument type="service" id="fos_user.entity_manager" />
            <argument>%fos_user.model.user.class%</argument>
        </service>
        
        <!-- Register custom user profile form as service -->
        <service id="tb.facebook.connector" class="TB\Bundle\FrontendBundle\Service\FacebookConnector">
            <argument>%facebook_app_id%</argument>
            <argument>%facebook_app_secret%</argument>
        </service>

        <!-- Register Bitly  API Client -->
        <service id="tb.bitly_client" class="Hpatoio\Bitly\Client">
            <argument>%bitly_api_key%</argument>
        </service>
        
        <service id="tb.mailchimp" class="Mailchimp">
            <argument>%mailchimp_api_key%</argument>
        </service>
            
        <service id="tb.mailchimp_lists" class="Mailchimp_Lists">
            <argument type="service" id="tb.mailchimp" />
        </service>
        
        <service id="tb.gpx_generator" class="TB\Bundle\FrontendBundle\Service\GPXGenerator">
            <argument type="service" id="router" />
        </service>
            
    </services>
</container>
