framework:
    #esi:             ~
    #translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    globals:
        api_host: %api_host%  

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        types:
            # add and postgis types as provided by creof/doctrine2-spatial package
            geometry:   CrEOF\Spatial\DBAL\Types\GeometryType
            point:      CrEOF\Spatial\DBAL\Types\Geometry\PointType
            polygon:    CrEOF\Spatial\DBAL\Types\Geometry\PolygonType
            linestring: CrEOF\Spatial\DBAL\Types\Geometry\LineStringType
            # add hstore type from http://github.com/easybiblabs/EasyBib_DoctrineTypes
            hstore:     EasyBib\Doctrine\Types\Hstore

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true
        # postgis functions as provided by creof/doctrine2-spatial package
        dql:
            numeric_functions:
                st_contains:     CrEOF\Spatial\ORM\Query\AST\Functions\PostgreSql\STContains
                st_distance:     CrEOF\Spatial\ORM\Query\AST\Functions\PostgreSql\STDistance
                st_area:         CrEOF\Spatial\ORM\Query\AST\Functions\PostgreSql\STArea
                st_length:       CrEOF\Spatial\ORM\Query\AST\Functions\PostgreSql\STLength
                st_geomfromtext: CrEOF\Spatial\ORM\Query\AST\Functions\PostgreSql\STGeomFromText
                st_centroid:     CrEOF\Spatial\ORM\Query\AST\Functions\PostgreSql\STCentroid
                st_astext:       CrEOF\Spatial\ORM\Query\AST\Functions\PostgreSql\STAsText
                st_makeline:     CrEOF\Spatial\ORM\Query\AST\Functions\PostgreSql\STMakeLine
                st_setsrid:      CrEOF\Spatial\ORM\Query\AST\Functions\PostgreSql\STSetSRID	

# Swiftmailer Configuration
swiftmailer:
    transport:  %mailer_transport%
    host:       %mailer_host%
    username:   %mailer_user%
    password:   %mailer_password%
    logging:    "%kernel.debug%"
    
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: TB\Bundle\FrontendBundle\Entity\UserProfile
    
    # Use custom form type defined in srv/TB/Bundle/FrontendBundle/Form/Type
    registration:
        form:
            type: tb_user_registration
    from_email:
            address:        email@trailburning.com
            sender_name:    email@trailburning.com
            
stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default: 
            sluggable: true
            timestampable: true
            
knp_gaufrette:
    adapters:
        gpx_files:
            aws_s3:
                service_id: aws_s3_client
                bucket_name:  trailburning-gpx
                options:
                    create: true
        trail_media_files:
            aws_s3:
                service_id: aws_s3_client
                bucket_name:  trailburning-media
                options:
                    create: true
                
    filesystems:
        gpx_files:
            adapter:    gpx_files
            alias:      gpx_files_filesystem 
        trail_media_files:
            adapter:    trail_media_files
            alias:      trail_media_files_filesystem             
            
services:
    s3_client:
        class:      %s3_client_class% 
        factory_class:  %s3_client_class%
        factory_method: factory
        arguments: 
            arguments:
                - { key: %aws_accesskey%, secret: %aws_secretkey% } 
                
    aws_s3_client:
        class: Aws\S3\S3Client
        factory_class: Aws\S3\S3Client
        factory_method: 'factory'
        arguments:
            -
                key: %aws_accesskey%
                secret: %aws_secretkey%

old_sound_rabbit_mq:
    connections:
        default:
            host:     %rabbit_mq_host%
            port:     5672
            user:     %rabbit_mq_user%
            password: %rabbit_mq_password%
            vhost:    %rabbit_mq_vhost%
            lazy:     false                
        
    producers:
        activity:
            connection:       default
            exchange_options: {name: 'activity', type: direct}

    consumers:
        activity:
            connection:       default
            exchange_options: {name: 'activity', type: direct}
            queue_options:    {name: 'activity'}
            callback:         activity_consumer